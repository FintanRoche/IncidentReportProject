@using Microsoft.AspNetCore.Identity


@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IReportRepository ReportRepository
    <ul>
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item col-sm-2">
                <a class="nav-link" asp-area="" asp-controller="Report" asp-action="Create">Create</a>
            </li>
            <li class="nav-item col-sm-2">
                <a class="nav-link" asp-area="" asp-controller="Report" asp-action="Search">Search</a>
            </li>
            <li class="nav-item col-sm-2">
                <a class="nav-link" asp-area="" asp-controller="Report" asp-action="Display">Display</a>
            </li>
            <li class="nav-item col-sm-2">
                <a class="nav-link" asp-area="" asp-controller="Report" asp-action="DisplayUser">Pending(@ReportRepository.GetPending(UserManager.GetUserId(User)))</a>
            </li>
            @if (User.IsInRole("Manager") == true)
            {
                <li class="nav-item col-sm-2 ">
                    <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
                </li>
            }
         
            <li class="nav-item col-sm-1 float-right">
                <form id="logoutForm" class="form-inline " asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Create", "Report", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-white">Logout</button>
                </form>
            </li>
        }

    </ul>
