@using Microsoft.AspNetCore.Identity


@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IReportRepository ReportRepository
<ul>
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item col-md-2">
            <a class="nav-link" asp-area="" asp-controller="Report" asp-action="Create">Create</a>
        </li>
        <li class="nav-item col-md-2">
            <a class="nav-link" asp-area="" asp-controller="Report" asp-action="Search">Search</a>
        </li>
        <li class="nav-item col-md-2">
            <a class="nav-link" asp-area="" asp-controller="Report" asp-action="Display">Display</a>
        </li>
        <li class="nav-item col-md-2">
            <a class="nav-link" asp-area="" asp-controller="Report" asp-action="DisplayUser">Pending(@ReportRepository.GetPending(UserManager.GetUserId(User)))</a>
        </li>
        <li class="nav-item col-md-2">
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"></a>
        </li>
        <li class="nav-item col-md-1.5">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Create", "Report", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    //else
    //{
    @*<li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>*@
    @*<li class="nav-item">
                <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }*@
</ul>
